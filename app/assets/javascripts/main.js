webpackJsonp([1],[
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\n__webpack_require__(1);\n\nvar _react = __webpack_require__(299);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(335);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Datapoints Component\nvar Datapoints = _react2.default.createClass({\n  displayName: 'Datapoints',\n\n  loadDatapointsFromServer: function loadDatapointsFromServer() {\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      cache: false,\n      success: function (data) {\n        this.setState({ data: data });\n      }.bind(this),\n      error: function (xhr, status, err) {\n        console.error(this.props.url, status, err.toString());\n      }.bind(this)\n    });\n  },\n  getInitialState: function getInitialState() {\n    return { data: [] };\n  },\n  componentDidMount: function componentDidMount() {\n    this.loadDatapointsFromServer();\n    setInterval(this.loadDatapointsFromServer, 2000);\n  },\n  render: function render() {\n    var datapointNodes = this.state.data.map(function (datapoint) {\n      return _react2.default.createElement(Datapoint, {\n        key: datapoint.id,\n        datatype: datapoint.datatype,\n        measuretype: datapoint.measuretype,\n        usage: datapoint.usage,\n        meter_reading: datapoint.meter_reading\n      });\n    });\n    return _react2.default.createElement(\n      'table',\n      { className: 'table table-striped' },\n      _react2.default.createElement(\n        'th',\n        null,\n        'Data Type'\n      ),\n      _react2.default.createElement(\n        'th',\n        null,\n        'Measure Type'\n      ),\n      _react2.default.createElement(\n        'th',\n        null,\n        'Usage'\n      ),\n      _react2.default.createElement(\n        'th',\n        null,\n        'Meter Reading'\n      ),\n      _react2.default.createElement(\n        'tbody',\n        null,\n        datapointNodes\n      )\n    );\n  }\n});\nvar Datapoint = _react2.default.createClass({\n  displayName: 'Datapoint',\n\n  render: function render() {\n    return _react2.default.createElement(\n      'tr',\n      null,\n      _react2.default.createElement(\n        'td',\n        null,\n        this.props.datatype\n      ),\n      _react2.default.createElement(\n        'td',\n        null,\n        this.props.measuretype\n      ),\n      _react2.default.createElement(\n        'td',\n        null,\n        this.props.usage\n      ),\n      _react2.default.createElement(\n        'td',\n        null,\n        this.props.meter_reading\n      )\n    );\n  }\n});\nvar DatapointForm = _react2.default.createClass({\n  displayName: 'DatapointForm',\n\n  // Here are the required API data parameters. We capture this as state.\n  getInitialState: function getInitialState() {\n    return { datatype: 'Water', measuretype: 'Usage', usage: '', meter_reading: '' };\n  },\n  // Handle changes to the input field and dropdown menu items. This modifies the existing state.\n  handleDatatypeChange: function handleDatatypeChange(e) {\n    this.setState({ datatype: e.target.value });\n  },\n  handleMeasuretypeChange: function handleMeasuretypeChange(e) {\n    this.setState({ measuretype: e.target.value });\n  },\n  handleAmountChange: function handleAmountChange(e) {\n    this.setState({ usage: e.target.value });\n    this.setState({ meter_reading: e.target.value });\n  },\n  // Set variables from state to be used in Ajax request. Define and fire Ajax call.\n  handleSubmit: function handleSubmit(e) {\n    e.preventDefault();\n    $.ajax({\n      type: \"POST\",\n      url: this.props.url,\n      dataType: 'json',\n      cache: false,\n      data: {\n        datapoint: {\n          datatype: this.state.datatype.trim(),\n          measuretype: this.state.measuretype.trim(),\n          usage: this.state.usage.trim(),\n          meter_reading: this.state.meter_reading.trim()\n        }\n      },\n      success: function (data) {\n        this.setState({ data: data });\n      }.bind(this),\n      error: function (xhr, status, err) {\n        console.error(this.props.url, status, err.toString());\n      }.bind(this)\n    });\n  },\n  render: function render() {\n    return _react2.default.createElement(\n      'div',\n      null,\n      _react2.default.createElement(\n        'select',\n        { defaultValue: this.value, value: this.state.value, onChange: this.handleDatatypeChange },\n        _react2.default.createElement(\n          'option',\n          null,\n          'Water'\n        ),\n        _react2.default.createElement(\n          'option',\n          null,\n          'Electricity'\n        )\n      ),\n      _react2.default.createElement(\n        'select',\n        { defaultValue: this.value, value: this.state.value, onChange: this.handleMeasuretypeChange },\n        _react2.default.createElement(\n          'option',\n          null,\n          'Usage'\n        ),\n        _react2.default.createElement(\n          'option',\n          null,\n          'Meter Reading'\n        )\n      ),\n      _react2.default.createElement('input', { type: 'text', onChange: this.handleAmountChange }),\n      _react2.default.createElement(\n        'button',\n        { type: 'submit', onClick: this.handleSubmit },\n        'Submit'\n      )\n    );\n  }\n});\n\nsetInterval(function () {\n  _reactDom2.default.render(_react2.default.createElement(DatapointForm, { url: 'api/v1/datapoints' }), document.getElementById('dataform'));\n}, 500);\n\nsetInterval(function () {\n  _reactDom2.default.render(_react2.default.createElement(Datapoints, { url: 'api/v1/datapoints' }), document.getElementById('datapoints'));\n}, 250);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZWFjdC9zcmMvbWFpbi5qcz9lYWUzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7QUFDQTs7Ozs7OztBQUdBLElBQUksYUFBYSxnQkFBTSxXQUFOLENBQWtCO0FBQUE7O0FBQ2pDLDRCQUEwQixvQ0FBVztBQUNuQyxNQUFFLElBQUYsQ0FBTztBQUNMLFdBQUssS0FBSyxLQUFMLENBQVcsR0FEWDtBQUVMLGdCQUFVLE1BRkw7QUFHTCxhQUFPLEtBSEY7QUFJTCxlQUFTLFVBQVMsSUFBVCxFQUFlO0FBQ3RCLGFBQUssUUFBTCxDQUFjLEVBQUMsTUFBTSxJQUFQLEVBQWQ7QUFDRCxPQUZRLENBRVAsSUFGTyxDQUVGLElBRkUsQ0FKSjtBQU9MLGFBQU8sVUFBVSxHQUFWLEVBQWUsTUFBZixFQUF1QixHQUF2QixFQUE0QjtBQUNqQyxnQkFBUSxLQUFSLENBQWMsS0FBSyxLQUFMLENBQVcsR0FBekIsRUFBOEIsTUFBOUIsRUFBc0MsSUFBSSxRQUFKLEVBQXRDO0FBQ0QsT0FGTSxDQUVMLElBRkssQ0FFQSxJQUZBO0FBUEYsS0FBUDtBQVdELEdBYmdDO0FBY2pDLG1CQUFpQiwyQkFBVztBQUMxQixXQUFPLEVBQUMsTUFBTSxFQUFQLEVBQVA7QUFDRCxHQWhCZ0M7QUFpQmpDLHFCQUFtQiw2QkFBVztBQUM1QixTQUFLLHdCQUFMO0FBQ0EsZ0JBQVksS0FBSyx3QkFBakIsRUFBMkMsSUFBM0M7QUFDRCxHQXBCZ0M7QUFxQmpDLFVBQVEsa0JBQVc7QUFDakIsUUFBSSxpQkFBaUIsS0FBSyxLQUFMLENBQVcsSUFBWCxDQUFnQixHQUFoQixDQUFvQixVQUFTLFNBQVQsRUFBb0I7QUFDM0QsYUFDRSw4QkFBQyxTQUFEO0FBQ0UsYUFBTyxVQUFVLEVBRG5CO0FBRUUsa0JBQVUsVUFBVSxRQUZ0QjtBQUdFLHFCQUFlLFVBQVUsV0FIM0I7QUFJRSxlQUFTLFVBQVUsS0FKckI7QUFLRSx1QkFBaUIsVUFBVTtBQUw3QixRQURG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QUNFO0FBQUE7VUFBQTtVQUFBO0FBQUEsU0FERjtRQUVFO0FBQUE7VUFBQTtVQUFBO0FBQUE7QUFGRixPQURGO01BS0U7QUFBQTtRQUFBLEVBQVEsY0FBYyxLQUFLLEtBQTNCLEVBQWtDLE9BQU8sS0FBSyxLQUFMLENBQVcsS0FBcEQsRUFBMkQsVUFBVSxLQUFLLHVCQUExRTtRQUNFO0FBQUE7VUFBQTtVQUFBO0FBQUEsU0FERjtRQUVFO0FBQUE7VUFBQTtVQUFBO0FBQUE7QUFGRixPQUxGO01BU0UseUNBQU8sTUFBSyxNQUFaLEVBQW1CLFVBQVUsS0FBSyxrQkFBbEMsR0FURjtNQVVFO0FBQUE7UUFBQSxFQUFRLE1BQUssUUFBYixFQUFzQixTQUFTLEtBQUssWUFBcEM7UUFBQTtBQUFBO0FBVkYsS0FERjtBQWNEO0FBdkRtQyxDQUFsQixDQUFwQjs7QUEwREEsWUFBWSxZQUFXO0FBQ3JCLHFCQUFTLE1BQVQsQ0FDRSw4QkFBQyxhQUFELElBQWUsS0FBSSxtQkFBbkIsR0FERixFQUVFLFNBQVMsY0FBVCxDQUF3QixVQUF4QixDQUZGO0FBSUQsQ0FMRCxFQUtFLEdBTEY7O0FBT0EsWUFBWSxZQUFXO0FBQ3JCLHFCQUFTLE1BQVQsQ0FDRSw4QkFBQyxVQUFELElBQVksS0FBSSxtQkFBaEIsR0FERixFQUVFLFNBQVMsY0FBVCxDQUF3QixZQUF4QixDQUZGO0FBSUQsQ0FMRCxFQUtFLEdBTEYiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnYmFiZWwtcG9seWZpbGwnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuXG4vLyBEYXRhcG9pbnRzIENvbXBvbmVudFxudmFyIERhdGFwb2ludHMgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gIGxvYWREYXRhcG9pbnRzRnJvbVNlcnZlcjogZnVuY3Rpb24oKSB7XG4gICAgJC5hamF4KHtcbiAgICAgIHVybDogdGhpcy5wcm9wcy51cmwsXG4gICAgICBkYXRhVHlwZTogJ2pzb24nLFxuICAgICAgY2FjaGU6IGZhbHNlLFxuICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtkYXRhOiBkYXRhfSk7XG4gICAgICB9LmJpbmQodGhpcyksXG4gICAgICBlcnJvcjogZnVuY3Rpb24gKHhociwgc3RhdHVzLCBlcnIpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcih0aGlzLnByb3BzLnVybCwgc3RhdHVzLCBlcnIudG9TdHJpbmcoKSk7XG4gICAgICB9LmJpbmQodGhpcylcbiAgICB9KTtcbiAgfSxcbiAgZ2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge2RhdGE6IFtdfTtcbiAgfSxcbiAgY29tcG9uZW50RGlkTW91bnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMubG9hZERhdGFwb2ludHNGcm9tU2VydmVyKCk7XG4gICAgc2V0SW50ZXJ2YWwodGhpcy5sb2FkRGF0YXBvaW50c0Zyb21TZXJ2ZXIsIDIwMDApO1xuICB9LFxuICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBkYXRhcG9pbnROb2RlcyA9IHRoaXMuc3RhdGUuZGF0YS5tYXAoZnVuY3Rpb24oZGF0YXBvaW50KSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8RGF0YXBvaW50XG4gICAgICAgICAga2V5ID0ge2RhdGFwb2ludC5pZH1cbiAgICAgICAgICBkYXRhdHlwZT17ZGF0YXBvaW50LmRhdGF0eXBlfVxuICAgICAgICAgIG1lYXN1cmV0eXBlID0ge2RhdGFwb2ludC5tZWFzdXJldHlwZX1cbiAgICAgICAgICB1c2FnZSA9IHtkYXRhcG9pbnQudXNhZ2V9XG4gICAgICAgICAgbWV0ZXJfcmVhZGluZyA9IHtkYXRhcG9pbnQubWV0ZXJfcmVhZGluZ31cbiAgICAgICAgICAvPlxuICAgICAgKVxuICAgIH0pXG4gICAgcmV0dXJuIChcbiAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJ0YWJsZSB0YWJsZS1zdHJpcGVkXCI+XG4gICAgICAgIDx0aD5EYXRhIFR5cGU8L3RoPlxuICAgICAgICA8dGg+TWVhc3VyZSBUeXBlPC90aD5cbiAgICAgICAgPHRoPlVzYWdlPC90aD5cbiAgICAgICAgPHRoPk1ldGVyIFJlYWRpbmc8L3RoPlxuICAgICAgICA8dGJvZHk+XG4gICAgICAgICAge2RhdGFwb2ludE5vZGVzfVxuICAgICAgICA8L3Rib2R5PlxuICAgICAgPC90YWJsZT5cbiAgICApO1xuICB9XG59KTtcbnZhciBEYXRhcG9pbnQgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDx0cj5cbiAgICAgICAgPHRkPlxuICAgICAgICAgIHt0aGlzLnByb3BzLmRhdGF0eXBlfVxuICAgICAgICA8L3RkPlxuICAgICAgICA8dGQ+XG4gICAgICAgICAge3RoaXMucHJvcHMubWVhc3VyZXR5cGV9XG4gICAgICAgIDwvdGQ+XG4gICAgICAgIDx0ZD5cbiAgICAgICAgICB7dGhpcy5wcm9wcy51c2FnZX1cbiAgICAgICAgPC90ZD5cbiAgICAgICAgPHRkPlxuICAgICAgICAgIHt0aGlzLnByb3BzLm1ldGVyX3JlYWRpbmd9XG4gICAgICAgIDwvdGQ+XG4gICAgICA8L3RyPlxuICAgIClcbiAgfVxufSlcbnZhciBEYXRhcG9pbnRGb3JtID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAvLyBIZXJlIGFyZSB0aGUgcmVxdWlyZWQgQVBJIGRhdGEgcGFyYW1ldGVycy4gV2UgY2FwdHVyZSB0aGlzIGFzIHN0YXRlLlxuICBnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7ZGF0YXR5cGU6ICdXYXRlcicsIG1lYXN1cmV0eXBlOiAnVXNhZ2UnLCB1c2FnZTogJycsIG1ldGVyX3JlYWRpbmc6ICcnfTtcbiAgfSxcbiAgLy8gSGFuZGxlIGNoYW5nZXMgdG8gdGhlIGlucHV0IGZpZWxkIGFuZCBkcm9wZG93biBtZW51IGl0ZW1zLiBUaGlzIG1vZGlmaWVzIHRoZSBleGlzdGluZyBzdGF0ZS5cbiAgaGFuZGxlRGF0YXR5cGVDaGFuZ2U6IGZ1bmN0aW9uKGUpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtkYXRhdHlwZTogZS50YXJnZXQudmFsdWV9KVxuICB9LFxuICBoYW5kbGVNZWFzdXJldHlwZUNoYW5nZTogZnVuY3Rpb24oZSkge1xuICAgIHRoaXMuc2V0U3RhdGUoe21lYXN1cmV0eXBlOiBlLnRhcmdldC52YWx1ZX0pXG4gIH0sXG4gIGhhbmRsZUFtb3VudENoYW5nZTogZnVuY3Rpb24oZSkge1xuICAgIHRoaXMuc2V0U3RhdGUoe3VzYWdlOiBlLnRhcmdldC52YWx1ZX0pXG4gICAgdGhpcy5zZXRTdGF0ZSh7bWV0ZXJfcmVhZGluZzogZS50YXJnZXQudmFsdWV9KVxuICB9LFxuICAvLyBTZXQgdmFyaWFibGVzIGZyb20gc3RhdGUgdG8gYmUgdXNlZCBpbiBBamF4IHJlcXVlc3QuIERlZmluZSBhbmQgZmlyZSBBamF4IGNhbGwuXG4gIGhhbmRsZVN1Ym1pdDogZnVuY3Rpb24oZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAkLmFqYXgoe1xuICAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICB1cmw6IHRoaXMucHJvcHMudXJsLFxuICAgICAgZGF0YVR5cGU6ICdqc29uJyxcbiAgICAgIGNhY2hlOiBmYWxzZSxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgZGF0YXBvaW50OiB7XG4gICAgICAgICAgZGF0YXR5cGU6IHRoaXMuc3RhdGUuZGF0YXR5cGUudHJpbSgpLFxuICAgICAgICAgIG1lYXN1cmV0eXBlOiB0aGlzLnN0YXRlLm1lYXN1cmV0eXBlLnRyaW0oKSxcbiAgICAgICAgICB1c2FnZTogdGhpcy5zdGF0ZS51c2FnZS50cmltKCksXG4gICAgICAgICAgbWV0ZXJfcmVhZGluZzogdGhpcy5zdGF0ZS5tZXRlcl9yZWFkaW5nLnRyaW0oKVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtkYXRhOiBkYXRhfSk7XG4gICAgICB9LmJpbmQodGhpcyksXG4gICAgICBlcnJvcjogZnVuY3Rpb24gKHhociwgc3RhdHVzLCBlcnIpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcih0aGlzLnByb3BzLnVybCwgc3RhdHVzLCBlcnIudG9TdHJpbmcoKSk7XG4gICAgICB9LmJpbmQodGhpcylcbiAgICB9KTtcbiAgfSxcbiAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPHNlbGVjdCBkZWZhdWx0VmFsdWU9e3RoaXMudmFsdWV9IHZhbHVlPXt0aGlzLnN0YXRlLnZhbHVlfSBvbkNoYW5nZT17dGhpcy5oYW5kbGVEYXRhdHlwZUNoYW5nZX0+XG4gICAgICAgICAgPG9wdGlvbj5XYXRlcjwvb3B0aW9uPlxuICAgICAgICAgIDxvcHRpb24+RWxlY3RyaWNpdHk8L29wdGlvbj5cbiAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgIDxzZWxlY3QgZGVmYXVsdFZhbHVlPXt0aGlzLnZhbHVlfSB2YWx1ZT17dGhpcy5zdGF0ZS52YWx1ZX0gb25DaGFuZ2U9e3RoaXMuaGFuZGxlTWVhc3VyZXR5cGVDaGFuZ2V9PlxuICAgICAgICAgIDxvcHRpb24+VXNhZ2U8L29wdGlvbj5cbiAgICAgICAgICA8b3B0aW9uPk1ldGVyIFJlYWRpbmc8L29wdGlvbj5cbiAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUFtb3VudENoYW5nZX0+PC9pbnB1dD5cbiAgICAgICAgPGJ1dHRvbiB0eXBlPVwic3VibWl0XCIgb25DbGljaz17dGhpcy5oYW5kbGVTdWJtaXR9PlN1Ym1pdDwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59KTtcblxuc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7XG4gIFJlYWN0RE9NLnJlbmRlcihcbiAgICA8RGF0YXBvaW50Rm9ybSB1cmw9XCJhcGkvdjEvZGF0YXBvaW50c1wiLz4sXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RhdGFmb3JtJylcbiAgKTtcbn0sNTAwKTtcblxuc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7XG4gIFJlYWN0RE9NLnJlbmRlcihcbiAgICA8RGF0YXBvaW50cyB1cmw9XCJhcGkvdjEvZGF0YXBvaW50c1wiLz4sXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RhdGFwb2ludHMnKVxuICApO1xufSwyNTApO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9yZWFjdC9zcmMvbWFpbi5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ }
]);