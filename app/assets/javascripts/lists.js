webpackJsonp([0],[
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\n__webpack_require__(1);\n\nvar _react = __webpack_require__(299);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(335);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Tasks = _react2.default.createClass({\n  displayName: 'Tasks',\n\n  // Action for loading data from the rails API\n  loadTasksFromServer: function loadTasksFromServer() {\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      cache: false,\n      success: function (data) {\n        this.setState({ data: data });\n      }.bind(this),\n      error: function (xhr, status, err) {\n        console.error(this.props.url, status, err.toString());\n      }.bind(this)\n    });\n  },\n  getInitialState: function getInitialState() {\n    return { data: [] };\n  },\n  componentDidMount: function componentDidMount() {\n    this.loadTasksFromServer();\n    setInterval(this.loadTasksFromServer, 2000);\n  },\n  render: function render() {\n    var taskNodes = this.state.data.map(function (task) {\n      return _react2.default.createElement(Task, {\n        key: task.id,\n        id: task.id,\n        item: task.item\n      });\n    });\n    var options = this.state.data.map(function (task) {\n      return _react2.default.createElement(DoingStuff, {\n        key: task.id,\n        optionName: task.item });\n    });\n    return _react2.default.createElement(\n      'div',\n      null,\n      _react2.default.createElement(\n        'h2',\n        null,\n        'To Do'\n      ),\n      _react2.default.createElement(\n        'ul',\n        null,\n        taskNodes\n      ),\n      _react2.default.createElement(\n        'form',\n        null,\n        _react2.default.createElement(TaskForm, { url: 'api/v1/lists' })\n      ),\n      _react2.default.createElement(\n        'select',\n        null,\n        options\n      )\n    );\n  }\n});\nvar Task = _react2.default.createClass({\n  displayName: 'Task',\n\n  handleDelete: function handleDelete(e) {\n    e.preventDefault();\n    $.ajax({\n      method: 'DELETE',\n      url: \"/api/v1/lists/\" + this.props.id,\n      dataType: 'json',\n      cache: false,\n      error: function (xhr, status, err) {\n        console.error(this.props.url, status, err.toString());\n      }.bind(this)\n    });\n  },\n  render: function render() {\n    return _react2.default.createElement(\n      'li',\n      null,\n      this.props.item,\n      _react2.default.createElement(\n        'button',\n        { 'class': 'btn btn-danger', onClick: this.handleDelete },\n        'Delete'\n      )\n    );\n  }\n});\nvar TaskForm = _react2.default.createClass({\n  displayName: 'TaskForm',\n\n  getInitialState: function getInitialState() {\n    return { item: '' };\n  },\n  onChange: function onChange(e) {\n    this.setState({ item: e.target.value });\n  },\n\n  handleSubmit: function handleSubmit(e) {\n    e.preventDefault();\n    $.ajax({\n      type: \"POST\",\n      url: this.props.url,\n      dataType: 'json',\n      cache: false,\n      data: {\n        list: {\n          item: this.state.item.trim()\n        }\n      },\n      success: function (data) {\n        this.setState({ data: data });\n      }.bind(this),\n      error: function (xhr, status, err) {\n        console.error(this.props.url, status, err.toString());\n      }.bind(this)\n    });\n    this.setState({ item: '' });\n  },\n  render: function render() {\n    return _react2.default.createElement(\n      'div',\n      null,\n      _react2.default.createElement('input', {\n        type: 'text',\n        value: this.state.item,\n        onChange: this.onChange }),\n      _react2.default.createElement(\n        'button',\n        { className: 'btn btn-default', type: 'submit', onClick: this.handleSubmit },\n        'Add'\n      )\n    );\n  }\n});\nvar DoingStuff = _react2.default.createClass({\n  displayName: 'DoingStuff',\n\n  render: function render() {\n    return _react2.default.createElement(\n      'option',\n      null,\n      this.props.optionName\n    );\n  }\n});\nsetInterval(function () {\n  _reactDom2.default.render(_react2.default.createElement(Tasks, { url: 'api/v1/lists' }), document.getElementById('tasks'));\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }
]);